@using Portfolio2.Models.Entities
@model string
// <auto-generated />
using Microsoft.AspNetCore.Mvc;
using Portfolio2.Services;

namespace Portfolio2.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class @(Model)Controller : ControllerBase
    {
        private readonly I@(Model)Service _service;

        public @(Model)Controller(I@(Model)Service service)
        {
            _service = service;
        }

        [HttpGet]
        public async Task<IActionResult> GetAll()
        {
            var items = await _service.GetAllAsync();
            return Ok(items);
        }

        [HttpGet("{id}")]
        public async Task<IActionResult> GetById(int id)
        {
            var item = await _service.GetByIdAsync(id);
            return item != null ? Ok(item) : NotFound();
        }

        [HttpPost]
        public async Task<IActionResult> Create([FromBody] @(Model)CreateDto dto)
        {
            var createdItem = await _service.CreateAsync(dto);
            return CreatedAtAction(nameof(GetById), new { id = createdItem.Id }, createdItem);
        }

        [HttpPut("{id}")]
        public async Task<IActionResult> Update(int id, [FromBody] @(Model)UpdateDto dto)
        {
            var result = await _service.UpdateAsync(id, dto);
            return result ? NoContent() : NotFound();
        }

        [HttpDelete("{id}")]
        public async Task<IActionResult> Delete(int id)
        {
            var result = await _service.DeleteAsync(id);
            return result ? NoContent() : NotFound();
        }
    }
}